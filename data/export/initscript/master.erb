#! /bin/sh
#
# Generated initscript for <%= app %>
#
# chkconfig: 2345 25 25
# description: This file starts <%= app %>. It should be placed in /etc/init.d

## Source function library.
. /etc/rc.d/init.d/functions

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Runs <%= app %>"
NAME=<%= app %>
PIDDIR=/var/run/$NAME
SCRIPTNAME=/etc/init.d/$NAME
USERNAME=<%= user %>

retval=0

start() {
    mkdir -p $PIDDIR
    mkdir -p <%= log %>
    chown $USERNAME: <%= log %>
    echo -n $"Starting $NAME: "
    # START APPLICATION: <%= app %>
    <% engine.each_process do |name, process| %>
      # START PROCESS: <%= name %>
      <% 1.upto(engine.formation[name]) do |num| %>
        # START CONCURRENT: <%= num %>
          # Start: <%= app %>.<%= name %>.<%= num %>
          # Create $PIDDIR/<%= name %>.<%= num %>.pid
          su - $USERNAME -c 'cd <%= engine.root %>; export PORT=<%= engine.port_for(process, num) %>;<% engine.environment.each_pair do |var,env| %> export <%= var.upcase %>=<%= env %>; <% end %> <%= process.command %> >> <%= log %>/<%=name%>-<%=num%>.log 2>&1 & echo $!' > $PIDDIR/<%= name %>.<%= num %>.pid
      <% end %>
    <% end %>
    # if not running, start it up here, usually something like "daemon $exec"
    retval=$?
    echo
    return $retval
}

stop() {
  echo -n $"Stopping $NAME: "
	# STOP APPLICATION: <%= app %>
	<% engine.each_process do |name, process| %>
		# STOP PROCESS: <%= name %>
		<% 1.upto(engine.formation[name]) do |num| %>
			# STOP CONCURRENT: <%= num %>
				# Stop: <%= app %>.<%= name %>.<%= num %>
				kill `cat $PIDDIR/<%= name %>.<%= num %>.pid`
				rm $PIDDIR/<%= name %>.<%= num %>.pid
		<% end %>
  <% end %>
  retval=$?
  echo
  [ $retval -eq 0 ] && rmdir $PIDDIR
  return $retva
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    <% engine.each_process do |name, process| %>
      <% 1.upto(engine.formation[name]) do |num| %>
          status -p $PIDDIR/<%= name %>.<%= num %>.pid $NAME
      <% end %>
    <% end %>
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
